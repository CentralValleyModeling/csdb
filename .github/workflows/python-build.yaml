name: python-build

on:
  pull_request:
    types:
      - synchronize
      - opened
      - reopened
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        python-version: ["3.10", "3.11", "3.12"]
      

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Get pip cache dir
        id: pip-cache
        run: echo "PIP_CACHE_DIR=$(python -m pip cache dir)" >> $GITHUB_ENV

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build
          pip install -r requirements.txt
    
      - name: Build a binary wheel and a source tarball
        run: |
          python -m build
      
      - name: Get setuptools_scm version
        run: |
          echo "CSDB_VERSION=$(python -m setuptools_scm)" >> "$GITHUB_ENV"

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: csdb-${{ env.CSDB_VERSION }}-${{ matrix.python-version }}-${{ runner.os }}          
          path: dist/